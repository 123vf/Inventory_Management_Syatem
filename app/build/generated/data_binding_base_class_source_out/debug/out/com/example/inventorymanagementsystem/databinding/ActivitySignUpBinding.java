// Generated by view binder compiler. Do not edit!
package com.example.inventorymanagementsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventorymanagementsystem.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView backtologintxt;

  @NonNull
  public final TextInputLayout confpasswordtxt;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final TextInputLayout emailtxt;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final TextInputLayout passwordtxt;

  @NonNull
  public final ProgressBar progressBar2;

  @NonNull
  public final Button registerbtn;

  @NonNull
  public final TextView signuptxt;

  @NonNull
  public final Space space1;

  @NonNull
  public final Space space2;

  @NonNull
  public final Space space3;

  @NonNull
  public final TextInputLayout usernametxt;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView backtologintxt, @NonNull TextInputLayout confpasswordtxt,
      @NonNull TextInputEditText email, @NonNull TextInputLayout emailtxt,
      @NonNull TextInputEditText name, @NonNull TextInputEditText password,
      @NonNull TextInputLayout passwordtxt, @NonNull ProgressBar progressBar2,
      @NonNull Button registerbtn, @NonNull TextView signuptxt, @NonNull Space space1,
      @NonNull Space space2, @NonNull Space space3, @NonNull TextInputLayout usernametxt) {
    this.rootView = rootView;
    this.backtologintxt = backtologintxt;
    this.confpasswordtxt = confpasswordtxt;
    this.email = email;
    this.emailtxt = emailtxt;
    this.name = name;
    this.password = password;
    this.passwordtxt = passwordtxt;
    this.progressBar2 = progressBar2;
    this.registerbtn = registerbtn;
    this.signuptxt = signuptxt;
    this.space1 = space1;
    this.space2 = space2;
    this.space3 = space3;
    this.usernametxt = usernametxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backtologintxt;
      TextView backtologintxt = ViewBindings.findChildViewById(rootView, id);
      if (backtologintxt == null) {
        break missingId;
      }

      id = R.id.confpasswordtxt;
      TextInputLayout confpasswordtxt = ViewBindings.findChildViewById(rootView, id);
      if (confpasswordtxt == null) {
        break missingId;
      }

      id = R.id.email;
      TextInputEditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.emailtxt;
      TextInputLayout emailtxt = ViewBindings.findChildViewById(rootView, id);
      if (emailtxt == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputEditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.passwordtxt;
      TextInputLayout passwordtxt = ViewBindings.findChildViewById(rootView, id);
      if (passwordtxt == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      id = R.id.registerbtn;
      Button registerbtn = ViewBindings.findChildViewById(rootView, id);
      if (registerbtn == null) {
        break missingId;
      }

      id = R.id.signuptxt;
      TextView signuptxt = ViewBindings.findChildViewById(rootView, id);
      if (signuptxt == null) {
        break missingId;
      }

      id = R.id.space1;
      Space space1 = ViewBindings.findChildViewById(rootView, id);
      if (space1 == null) {
        break missingId;
      }

      id = R.id.space2;
      Space space2 = ViewBindings.findChildViewById(rootView, id);
      if (space2 == null) {
        break missingId;
      }

      id = R.id.space3;
      Space space3 = ViewBindings.findChildViewById(rootView, id);
      if (space3 == null) {
        break missingId;
      }

      id = R.id.usernametxt;
      TextInputLayout usernametxt = ViewBindings.findChildViewById(rootView, id);
      if (usernametxt == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, backtologintxt, confpasswordtxt,
          email, emailtxt, name, password, passwordtxt, progressBar2, registerbtn, signuptxt,
          space1, space2, space3, usernametxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
