// Generated by view binder compiler. Do not edit!
package com.example.inventorymanagementsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventorymanagementsystem.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddCustomerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnAddCustomer;

  @NonNull
  public final EditText customerContact;

  @NonNull
  public final EditText customerEmail;

  @NonNull
  public final EditText customerImg;

  @NonNull
  public final EditText customerName;

  private ActivityAddCustomerBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnAddCustomer, @NonNull EditText customerContact,
      @NonNull EditText customerEmail, @NonNull EditText customerImg,
      @NonNull EditText customerName) {
    this.rootView = rootView;
    this.btnAddCustomer = btnAddCustomer;
    this.customerContact = customerContact;
    this.customerEmail = customerEmail;
    this.customerImg = customerImg;
    this.customerName = customerName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_customer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCustomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddCustomer;
      MaterialButton btnAddCustomer = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCustomer == null) {
        break missingId;
      }

      id = R.id.customerContact;
      EditText customerContact = ViewBindings.findChildViewById(rootView, id);
      if (customerContact == null) {
        break missingId;
      }

      id = R.id.customerEmail;
      EditText customerEmail = ViewBindings.findChildViewById(rootView, id);
      if (customerEmail == null) {
        break missingId;
      }

      id = R.id.customerImg;
      EditText customerImg = ViewBindings.findChildViewById(rootView, id);
      if (customerImg == null) {
        break missingId;
      }

      id = R.id.customerName;
      EditText customerName = ViewBindings.findChildViewById(rootView, id);
      if (customerName == null) {
        break missingId;
      }

      return new ActivityAddCustomerBinding((LinearLayout) rootView, btnAddCustomer,
          customerContact, customerEmail, customerImg, customerName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
