// Generated by view binder compiler. Do not edit!
package com.example.inventorymanagementsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.inventorymanagementsystem.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityForgotPasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout email;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView login;

  @NonNull
  public final Button sendemail;

  @NonNull
  public final TextView signInTxt;

  @NonNull
  public final Space space1;

  @NonNull
  public final Space space2;

  @NonNull
  public final Space space3;

  private ActivityForgotPasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout email, @NonNull LinearLayout linearLayout, @NonNull TextView login,
      @NonNull Button sendemail, @NonNull TextView signInTxt, @NonNull Space space1,
      @NonNull Space space2, @NonNull Space space3) {
    this.rootView = rootView;
    this.email = email;
    this.linearLayout = linearLayout;
    this.login = login;
    this.sendemail = sendemail;
    this.signInTxt = signInTxt;
    this.space1 = space1;
    this.space2 = space2;
    this.space3 = space3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_forgot_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityForgotPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email;
      TextInputLayout email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.login;
      TextView login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.sendemail;
      Button sendemail = ViewBindings.findChildViewById(rootView, id);
      if (sendemail == null) {
        break missingId;
      }

      id = R.id.signInTxt;
      TextView signInTxt = ViewBindings.findChildViewById(rootView, id);
      if (signInTxt == null) {
        break missingId;
      }

      id = R.id.space1;
      Space space1 = ViewBindings.findChildViewById(rootView, id);
      if (space1 == null) {
        break missingId;
      }

      id = R.id.space2;
      Space space2 = ViewBindings.findChildViewById(rootView, id);
      if (space2 == null) {
        break missingId;
      }

      id = R.id.space3;
      Space space3 = ViewBindings.findChildViewById(rootView, id);
      if (space3 == null) {
        break missingId;
      }

      return new ActivityForgotPasswordBinding((ConstraintLayout) rootView, email, linearLayout,
          login, sendemail, signInTxt, space1, space2, space3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
